<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:Anapher.Wpf.Toolkit.Converter;assembly=Anapher.Wpf.Toolkit"
    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--#region WindowButtonCommands-->
    <ControlTemplate x:Key="Windows10WindowButtonCommandsTemplate" TargetType="{x:Type mah:WindowButtonCommands}">
        <StackPanel Orientation="Horizontal">
            <Button
                x:Name="PART_Min"
                Width="46"
                Focusable="False"
                IsEnabled="{Binding IsMinButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                UseLayoutRounding="True">
                <Button.Visibility>
                    <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MIN">
                        <Binding
                            Mode="OneWay"
                            Path="ShowMinButton"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                        <Binding
                            Mode="OneWay"
                            Path="UseNoneWindowStyle"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                        <Binding
                            Mode="OneWay"
                            Path="ResizeMode"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                    </MultiBinding>
                </Button.Visibility>
                <Path
                    Width="10"
                    Height="10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,40 L96,40 96,48 0,48 0,40z"
                    Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                    RenderOptions.EdgeMode="Aliased"
                    SnapsToDevicePixels="True"
                    Stretch="Uniform" />
            </Button>
            <Button
                x:Name="PART_Max"
                Width="46"
                Focusable="False"
                IsEnabled="{Binding IsMaxRestoreButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                UseLayoutRounding="True">
                <Button.Visibility>
                    <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="MAX">
                        <Binding
                            Mode="OneWay"
                            Path="ShowMaxRestoreButton"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                        <Binding
                            Mode="OneWay"
                            Path="UseNoneWindowStyle"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                        <Binding
                            Mode="OneWay"
                            Path="ResizeMode"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                    </MultiBinding>
                </Button.Visibility>
                <!--  normal state  -->
                <Canvas
                    Width="12"
                    Height="12"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Path
                        x:Name="PART_MaxPath"
                        Data="M2,2 2,10 10,10 10,2 2,2Z M1,11 1,1 11,1 11,11 1,11Z"
                        Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                        RenderOptions.EdgeMode="Aliased"
                        SnapsToDevicePixels="True"
                        Stretch="Uniform" />
                </Canvas>
            </Button>
            <Button
                x:Name="PART_Close"
                Width="46"
                Focusable="False"
                IsEnabled="{Binding IsCloseButtonEnabled, RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}}"
                UseLayoutRounding="True">
                <Button.Visibility>
                    <MultiBinding Converter="{x:Static converters:ResizeModeMinMaxButtonVisibilityConverter.Instance}" ConverterParameter="CLOSE">
                        <Binding
                            Mode="OneWay"
                            Path="ShowCloseButton"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                        <Binding
                            Mode="OneWay"
                            Path="UseNoneWindowStyle"
                            RelativeSource="{RelativeSource AncestorType={x:Type mah:MetroWindow}}" />
                    </MultiBinding>
                </Button.Visibility>
                <Grid>
                    <Line
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        SnapsToDevicePixels="True"
                        Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                        X1="0"
                        X2="10"
                        Y1="0"
                        Y2="10" />
                    <Line
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        SnapsToDevicePixels="True"
                        Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                        X1="0"
                        X2="10"
                        Y1="10"
                        Y2="0" />
                </Grid>
            </Button>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:MetroWindow}}, Path=WindowState}" Value="Maximized">
                <Setter TargetName="PART_MaxPath" Property="Data" Value="M10,9 9,9 9,3 3,3 3,2 10,2 10,9Z M8,11 1,11 1,4 8,4 8,11Z M2,1 2,3 0,3 0,12 9,12 9,10 11,10 11,1 2,1Z" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush
        x:Key="WindowCommandsTransparentBrush"
        Opacity=".8"
        Color="{DynamicResource WindowButtonColor}" />
    <SolidColorBrush x:Key="WindowCommandsBrush" Color="{DynamicResource WindowButtonColor}" />

    <Style x:Key="MetroWindowButtonStyleAnimated" TargetType="Button">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MaxHeight" Value="34" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="34" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid
                            x:Name="PART_Background"
                            Background="{StaticResource WindowCommandsTransparentBrush}"
                            Opacity="0" />
                        <mah:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Opacity="0.6"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{StaticResource WindowCommandsBrush}" />
                            <Setter TargetName="PART_Background" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MetroWindowButtonStyleAnimatedDark"
        BasedOn="{StaticResource MetroWindowButtonStyleAnimated}"
        TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid
                            x:Name="PART_Background"
                            Background="{StaticResource WhiteBrush}"
                            Opacity=".6" />
                        <mah:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Opacity="0.6"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="PART_Background"
                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                            To="#3c3c3c"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="PART_Background"
                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource WhiteColor}"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MetroWindowCloseButtonStyleAnimated"
        BasedOn="{StaticResource MetroWindowButtonStyleAnimated}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid
                            x:Name="PART_Background"
                            Background="#EB2F2F"
                            Opacity="0" />
                        <mah:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Opacity="0.6"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value=".6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                To="White"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)"
                                To="{StaticResource BlackColor}"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Windows10WindowButtonCommands" TargetType="{x:Type mah:WindowButtonCommands}">
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource MetroWindowCloseButtonStyleAnimated}" />
        <Setter Property="DarkMaxButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="DarkMinButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Theme" Value="Light" />
        <Setter Property="LightCloseButtonStyle" Value="{DynamicResource MetroWindowCloseButtonStyleAnimated}" />
        <Setter Property="LightMaxButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="LightMinButtonStyle" Value="{DynamicResource MetroWindowButtonStyleAnimated}" />
        <Setter Property="Template" Value="{StaticResource Windows10WindowButtonCommandsTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ParentWindow.ShowTitleBar, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <converter:IconSizeConverter x:Key="IconSizeConverter" />

    <Style BasedOn="{StaticResource Windows10WindowButtonCommands}" TargetType="mah:WindowButtonCommands" />

    <Style x:Key="CleanWindowCommandsStyleKey" TargetType="{x:Type mah:WindowCommands}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="SeparatorHeight" Value="11" />
        <Setter Property="ShowLastSeparator" Value="False" />
    </Style>

    <Style BasedOn="{StaticResource CleanWindowCommandsStyleKey}" TargetType="{x:Type mah:WindowCommands}" />

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type mah:MetroWindow}">
        <Grid>
            <AdornerDecorator>
                <Grid Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  left window commands  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  title  -->
                        <ColumnDefinition Width="*" />
                        <!--  right window commands  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Rectangle
                        x:Name="PART_WindowTitleBackground"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Fill="{TemplateBinding WindowTitleBrush}"
                        Focusable="False"
                        StrokeThickness="0"
                        UseLayoutRounding="True"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  icon  -->
                    <ContentControl
                        x:Name="PART_Icon"
                        Grid.Row="0"
                        Grid.Column="0"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        MinWidth="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Panel.ZIndex="1"
                        Content="{TemplateBinding Icon}"
                        ContentTemplate="{TemplateBinding IconTemplate}"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowIconOnTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the left window commands  -->
                    <ContentPresenter
                        x:Name="PART_LeftWindowCommands"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1"
                        Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <mah:MetroThumb
                        x:Name="PART_WindowTitleThumb"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Style="{StaticResource WindowTitleThumbStyle}" />
                    <!--  the title bar  -->
                    <mah:MetroThumbContentControl
                        x:Name="PART_TitleBar"
                        Grid.Row="0"
                        Grid.Column="2"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        HorizontalAlignment="{TemplateBinding TitleAlignment}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Content="{TemplateBinding Title}"
                        ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                        ContentTemplate="{TemplateBinding TitleTemplate}"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ContentControl.Foreground>
                            <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                                <Binding
                                    ElementName="PART_WindowTitleBackground"
                                    Mode="OneWay"
                                    Path="Fill" />
                                <Binding
                                    Mode="OneWay"
                                    Path="TitleForeground"
                                    RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </ContentControl.Foreground>
                    </mah:MetroThumbContentControl>

                    <!--  the right window commands  -->
                    <ContentPresenter
                        x:Name="PART_RightWindowCommands"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="3"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1"
                        Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Focusable="False"
                        Visibility="{TemplateBinding ShowTitleBar,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the window button commands  -->
                    <ContentPresenter
                        x:Name="PART_WindowButtonCommands"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="4"
                        Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1"
                        Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Focusable="False"
                        UseLayoutRounding="True" />

                    <!--  the main window content  -->
                    <mah:MetroContentControl
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Margin="0,2,0,0"
                        FocusVisualStyle="{x:Null}"
                        IsTabStop="False"
                        OnlyLoadTransition="True"
                        TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                        UseLayoutRounding="True">
                        <ContentPresenter />
                    </mah:MetroContentControl>

                    <!--  disables the main content when a modal flyout is shown  -->
                    <Rectangle
                        Name="PART_FlyoutModal"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Fill="{DynamicResource BlackColorBrush}"
                        Opacity="0.5"
                        Visibility="Hidden" />
                    <mah:MetroThumb
                        x:Name="PART_FlyoutModalDragMoveThumb"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Style="{StaticResource WindowTitleThumbStyle}"
                        Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />

                    <!--  flyouts  -->
                    <ContentControl
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        VerticalAlignment="Stretch"
                        Panel.ZIndex="2"
                        Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Focusable="False"
                        KeyboardNavigation.TabNavigation="None" />

                    <!--  inactive dialog container  -->
                    <Grid
                        x:Name="PART_MetroInactiveDialogsContainer"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Panel.ZIndex="3"
                        FocusVisualStyle="{x:Null}" />

                    <!--  overlay effect container  -->
                    <Grid
                        x:Name="PART_OverlayBox"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Panel.ZIndex="4"
                        Background="Black"
                        FocusVisualStyle="{x:Null}"
                        Focusable="False"
                        Opacity="0"
                        Visibility="Hidden" />

                    <!--  active dialog container  -->
                    <Grid
                        x:Name="PART_MetroActiveDialogContainer"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Panel.ZIndex="5"
                        FocusVisualStyle="{x:Null}" />
                </Grid>
            </AdornerDecorator>

            <Border
                x:Name="PART_Border"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{x:Null}"
                BorderBrush="{TemplateBinding GlowBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                UseLayoutRounding="True" />
            <ResizeGrip
                x:Name="WindowResizeGrip"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                IsTabStop="False"
                UseLayoutRounding="True"
                Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Resources>
            <Storyboard
                x:Key="OverlayFastSemiFadeIn"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard
                x:Key="OverlayFastSemiFadeOut"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0.0" />
            </Storyboard>
        </ControlTemplate.Resources>

        <ControlTemplate.Triggers>
            <Trigger Property="ShowDialogsOverTitleBar" Value="False">
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="1" />
            </Trigger>

            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="ShowTitleBar" Value="False">
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="False" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="True" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <!--  That's all which was changed  -->
            <Trigger Property="ShowIconOnTitleBar" Value="False">
                <Setter TargetName="PART_TitleBar" Property="Margin" Value="10,0,0,0" />
            </Trigger>
            <!--  /That's all which was changed  -->
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="MetroMainWindow" TargetType="mah:MetroWindow">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="converters:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <converters:StylizedBehaviorCollection>
                    <converters:BorderlessWindowBehavior />
                    <converters:WindowsSettingBehaviour />
                    <converters:GlowWindowBehavior />
                </converters:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="GlowBrush" Value="#5F3498db" />
        <Setter Property="BorderBrush" Value="#2980b9" />
        <Setter Property="NonActiveGlowBrush" Value="#5F000000" />
        <Setter Property="NonActiveBorderBrush" Value="Black" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="TitleAlignment" Value="Left" />
        <Setter Property="TitleForeground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        VerticalAlignment="Center"
                        FontFamily="Segoe UI"
                        FontSize="12"
                        Text="{TemplateBinding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowTitleBrush" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="OverrideDefaultWindowCommandsBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />
        <Setter Property="ShowIconOnTitleBar" Value="True" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="IconBitmapScalingMode" Value="HighQuality" />
        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="IconEdgeMode" Value="Aliased" />
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                        RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <Image.Source>
                            <TemplateBinding Converter="{StaticResource IconSizeConverter}" Property="Content">
                                <TemplateBinding.ConverterParameter>
                                    <system:Double>16</system:Double>
                                </TemplateBinding.ConverterParameter>
                            </TemplateBinding>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChildWindow" TargetType="mah:MetroWindow">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="converters:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <converters:StylizedBehaviorCollection>
                    <converters:BorderlessWindowBehavior />
                    <converters:WindowsSettingBehaviour />
                    <converters:GlowWindowBehavior />
                </converters:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="TitleAlignment" Value="Left" />
        <Setter Property="TitleForeground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        VerticalAlignment="Center"
                        FontFamily="Segoe UI"
                        FontSize="12"
                        Text="{TemplateBinding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowTitleBrush" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="OverrideDefaultWindowCommandsBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="GlowBrush" Value="#5F3498db" />
        <Setter Property="BorderBrush" Value="#2980b9" />
        <Setter Property="NonActiveGlowBrush" Value="#5F000000" />
        <Setter Property="NonActiveBorderBrush" Value="Black" />

        <Setter Property="WindowTransitionsEnabled" Value="False" />
        <Setter Property="ShowIconOnTitleBar" Value="True" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="IconBitmapScalingMode" Value="HighQuality" />
        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource NonActiveBorderColorBrush}" />
        <Setter Property="IconEdgeMode" Value="Aliased" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                        RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <Image.Source>
                            <TemplateBinding Converter="{StaticResource IconSizeConverter}" Property="Content">
                                <TemplateBinding.ConverterParameter>
                                    <system:Double>16</system:Double>
                                </TemplateBinding.ConverterParameter>
                            </TemplateBinding>
                        </Image.Source>
                    </Image>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Flyouts-->
    <DropShadowEffect
        x:Key="MaterialDesignShadowDepth5"
        BlurRadius="35"
        Direction="270"
        Opacity=".42"
        RenderingBias="Performance"
        ShadowDepth="13"
        Color="#AA000000" />

    <ControlTemplate x:Key="FlyoutTemplate" TargetType="{x:Type mah:Flyout}">
        <Border
            x:Name="PART_Root"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Effect="{StaticResource MaterialDesignShadowDepth5}">
            <Border.RenderTransform>
                <TranslateTransform />
            </Border.RenderTransform>
            <AdornerDecorator>
                <DockPanel FocusVisualStyle="{x:Null}" Focusable="False">
                    <mah:MetroThumbContentControl
                        x:Name="PART_Header"
                        Padding="{TemplateBinding mah:ControlsHelper.HeaderMargin}"
                        Content="{TemplateBinding Header}"
                        ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                        ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        DockPanel.Dock="Top"
                        FontSize="{TemplateBinding mah:ControlsHelper.HeaderFontSize}"
                        FontStretch="{TemplateBinding mah:ControlsHelper.HeaderFontStretch}"
                        FontWeight="{TemplateBinding mah:ControlsHelper.HeaderFontWeight}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ContentPresenter
                        x:Name="PART_Content"
                        ContentSource="Content"
                        DockPanel.Dock="Bottom" />
                </DockPanel>
            </AdornerDecorator>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="Default" />
                    <VisualState x:Name="Hide">
                        <Storyboard x:Name="HideStoryboard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame
                                    x:Name="hideFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame
                                    x:Name="hideFrameY"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame
                                    x:Name="fadeOutFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Show">
                        <Storyboard x:Name="ShowStoryboard">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame
                                    x:Name="showFrame"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame
                                    x:Name="showFrameY"
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame
                                    KeySpline="0.25,1,0.05,1"
                                    KeyTime="00:00:00.750"
                                    Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HideDirect">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ShowDirect">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="PART_Root"
                                Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Position" Value="Top">
                <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
                <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
            </Trigger>
            <Trigger Property="Position" Value="Bottom">
                <Setter TargetName="PART_Content" Property="DockPanel.Dock" Value="Right" />
                <Setter TargetName="PART_Header" Property="DockPanel.Dock" Value="Left" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CloseButtonVisibility" Value="Collapsed" />
                    <Condition Property="TitleVisibility" Value="Collapsed" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CloseButtonVisibility" Value="Hidden" />
                    <Condition Property="TitleVisibility" Value="Hidden" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="mah:Flyout">
        <Setter Property="Template" Value="{StaticResource FlyoutTemplate}" />
    </Style>
    <!--#endregion-->
</ResourceDictionary>